#!/usr/bin/env bash
set -emuo pipefail
source .env

twitch_message() {
    local USER ARGS MSG
    USER=$(echo "$MESSAGE" | cut -d' ' -f2 | tr -d '@')
    ARGS=$(echo "$MESSAGE" | cut -d' ' -f2-)
    if [[ "$ARGS" =~ "\$" ]]; then
        log "COMMAND INJECTION DETECTED"
        return
    fi
    if [[ "$ARGS" =~ "))" ]]; then
        log "COMMAND INJECTION DETECTED"
        return
    fi
    if [[ "$ARGS" =~ "\`" ]]; then
        log "COMMAND INJECTION DETECTED"
        return
    fi
    MSG=${*//%USER%/${USER:-}}
    MSG=${MSG//%ARGS%/${ARGS:-}}
    MSG="$(eval "echo $MSG")"
    echo "$MSG"
    log "(TWITCH): PRIVMSG #$CHANNEL :$MSG \r\n"
    echo -e "PRIVMSG #$CHANNEL :$MSG \r\n" >>ircin
}

log() {
    echo "[$(date +%N)]: $*" >>irc.log
}

echo '' >irc.log

while read -r IRC_MESSAGE; do
    #echo $IRC_MESSAGE >> irc.log
    IRC_MESSAGE=$(echo "$IRC_MESSAGE" | tr -s ' ')
    declare -A TAGS
    i=2
    for PART in $(echo "$IRC_MESSAGE" | tr ' ' '\n'); do
        case $PART in
        @*)
            # Convert Tags to associated array
            for TAG in $(echo "${PART:1}" | tr ';' '\n'); do
                KEY=$(echo "$TAG" | cut -d'=' -f1)
                VALUE=$(echo "$TAG" | cut -d'=' -f2-)
                if [[ "$KEY" == "badges" ]]; then
                    VALUE=$(echo "$VALUE" | sed 's#/[0-9]\+##g')
                fi
                TAGS+=([$KEY]=$VALUE)
            done
            ((i += 1))
            unset KEY
            unset VALUE
            ;;
        :*)
            SOURCE=${PART:1}
            ((i += 1))
            ;;
        *)
            if [[ -z ${COMMAND:-} ]]; then
                COMMAND=$PART
            else
                PARAMS=$(echo "$IRC_MESSAGE" | cut -d' ' -f"${i}"-)
                unset i
                break
            fi
            ;;
        esac
    done
    case $COMMAND in
    "PING")
        echo -e "PONG ${PARAMS:-}" >>ircin
        ;;
    "PRIVMSG")
        echo "TAGS" >>irc.log
        for KEY in "${!TAGS[@]}"; do
            echo "$KEY : ${TAGS[${KEY}]}" >>irc.log
        done
        echo "SOURCE ${SOURCE:-}" >>irc.log
        echo "COMMAND $COMMAND" >>irc.log
        echo "PARAMS $PARAMS" >>irc.log
        DESTINATION=$(echo "$PARAMS" | cut -d' ' -f1 | tail -c +2)
        MESSAGE=$(echo "$PARAMS" | cut -d' ' -f2- | tail -c +2 | tr -d '\r')
        MESSAGE=${MESSAGE//[^[:ascii:]]/}
        if [[ "$DESTINATION" == "$CHANNEL" ]]; then
            # HANDLE COMMANDS
            # IF ITS A COMMAND, STARTS WITH A BANG (!)
            if [[ "$MESSAGE" == !* ]]; then
                unset CMD
                log "Got command, checking unprivileged file"
                CMD=$(grep "^$(echo "${MESSAGE:1}" | tr '[:upper:]' '[:lower:]' | cut -d' ' -f1):.*$" unpriv.commands | cut -d':' -f2- || true)
                if [[ -z "$CMD" ]]; then
                    log "No unprivileged command, checking badges for mod"
                    case ",${TAGS[badges]}," in
                    *,broadcaster,* | *,moderator,*)
                        log "Is priv'd"
                        CMD=$(grep "$(echo "${MESSAGE:1}" | tr '[:upper:]' '[:lower:]' | cut -d' ' -f1):.*" priv.commands | cut -d':' -f2- || true)
                        ;;
                    esac
                fi
                if [[ -n "$CMD" ]]; then
                    sleep 0.1
                    twitch_message "$CMD"
                fi
                unset CMD
            fi
        fi
        unset DESTINATION
        unset MESSAGE
        ;;
    *) ;;
    esac
    unset TAGS
    unset SOURCE
    unset COMMAND
    unset PARAMS
done
